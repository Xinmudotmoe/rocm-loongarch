diff --git a/clang/lib/Basic/Targets/LoongArch.h b/clang/lib/Basic/Targets/LoongArch.h
index 5fc223483951..976f4c3b4aaa 100644
--- a/clang/lib/Basic/Targets/LoongArch.h
+++ b/clang/lib/Basic/Targets/LoongArch.h
@@ -44,6 +44,12 @@ public:
     SuitableAlign = 128;
     WCharType = SignedInt;
     WIntType = UnsignedInt;
+
+    HasFloat128 = true;
+    HasFloat16 = true;
+    HasBFloat16 = true;
+    BFloat16Format = &llvm::APFloat::BFloat();
+    BFloat16Width = BFloat16Align = 16;
   }

   bool setCPU(const std::string &Name) override {
diff --git a/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp b/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp
index 496f126b7173..52369cd72cf0 100644
--- a/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp
+++ b/llvm/lib/Target/LoongArch/LoongArchISelLowering.cpp
@@ -1927,7 +1927,22 @@ void LoongArchTargetLowering::ReplaceNodeResults(
     SDValue Src = N->getOperand(0);
     EVT FVT = EVT::getFloatingPointVT(N->getValueSizeInBits(0));
     if (getTypeAction(*DAG.getContext(), Src.getValueType()) !=
-        TargetLowering::TypeSoftenFloat) {
+        TargetLowering::TypeSoftenFloat &&  Src.getValueType() == MVT::f16 ) {
+
+      RTLIB::Libcall LC;
+      LC = RTLIB::getFPTOSINT(MVT::f32, VT);
+      MakeLibCallOptions CallOptions;
+      EVT OpVT = MVT::f32;
+      CallOptions.setTypeListBeforeSoften(OpVT, VT, true);
+      SDValue Chain = SDValue();
+      SDValue Result;
+      std::tie(Result, Chain) =
+          makeLibCall(DAG, LC, VT, Src, CallOptions, DL, Chain);
+      Results.push_back(Result);
+      return;
+    } else
+    if (getTypeAction(*DAG.getContext(), Src.getValueType()) !=
+        TargetLowering::TypeSoftenFloat &&  Src.getValueType() != MVT::f16 ) {
       SDValue Dst = DAG.getNode(LoongArchISD::FTINT, DL, FVT, Src);
       Results.push_back(DAG.getNode(ISD::BITCAST, DL, VT, Dst));
       return;
diff --git a/clang/lib/Driver/ToolChains/CommonArgs.cpp b/clang/lib/Driver/ToolChains/CommonArgs.cpp
index c0ba7ab32fce..7b39f90f63db 100644
--- a/clang/lib/Driver/ToolChains/CommonArgs.cpp
+++ b/clang/lib/Driver/ToolChains/CommonArgs.cpp
@@ -3048,7 +3048,7 @@ void tools::addMCModel(const Driver &D, const llvm::opt::ArgList &Args,
           Args.hasFlagNoClaim(options::OPT_fplt, options::OPT_fno_plt, false))
         D.Diag(diag::err_drv_argument_not_allowed_with)
             << A->getAsString(Args) << "-fplt";
-      Ok = CM == "normal" || CM == "medium" || CM == "extreme";
+      Ok = CM == "normal" || CM == "medium" || CM == "extreme" || CM == "large";
       // Convert to LLVM recognizable names.
       if (Ok)
         CM = llvm::StringSwitch<StringRef>(CM)

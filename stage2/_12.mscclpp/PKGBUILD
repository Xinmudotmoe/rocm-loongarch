pkgbase='rocm--mscclpp'
pkgname=('rocm--mscclpp')
pkgver=6.4.0
pkgrel=640000
pkgdesc="MSCCL++: A GPU-driven communication stack for scalable AI applications"
arch=('loong64' 'x86_64' 'riscv64')
license=('MIT')
url="https://github.com/microsoft/mscclpp"

source=(
    "git+https://github.com/microsoft/mscclpp#tag=v0.6.0"
    "mscclpp.patch"
)
b2sums=('SKIP' 'SKIP')
depends=("rocm-llvm" "rocm-rocr-runtime" "rocm-clr")

PATH=/opt/rocm-${pkgver}/bin:$PATH
LD_LIBRARY_PATH=/opt/rocm-${pkgver}/lib64/:$LD_LIBRARY_PATH
prepare() {
  cd mscclpp
    git apply ../mscclpp.patch
  cd ..
  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS")
set(CMAKE_HIP_FLAGS "-I/opt/rocm-${pkgver}/include")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang++")
set(CMAKE_EXE_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64 -lamdhip64" )
EOF

  mkdir build || true
  cd build
  cmake "../mscclpp" \
  "-DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver}" \
   -DCMAKE_SHARED_LINKER_FLAGS="-L/opt/rocm-${pkgver}/lib64" \
   -DMSCCLPP_BUILD_TESTS=OFF \
   -DMSCCLPP_BUILD_PYTHON_BINDINGS=OFF \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
  -G 'Unix Makefiles'
}
build() {
  cd build
  make -j $(nproc)
}

check() {
  cd build
#  ninja test
#make check
#echo
}

#packaging() {

#}
package() {
  cd build
  make DESTDIR="$pkgdir/" install
}


pkgbase='rocm-ROCmValidationSuite'
pkgname=('rocm-ROCmValidationSuite')
pkgver=6.4.0
pkgrel=640000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/ROCmValidationSuite.git#tag=rocm-$pkgver"
    "git+https://github.com/jbeder/yaml-cpp"
    "ROCmValidationSuite.patch"
)
b2sums=('SKIP' 'SKIP' 'SKIP')
depends=("rocm-clr=${pkgver}" 'rocm-rocPRIM')
PATH=/opt/rocm-${pkgver}/bin:/opt/rocm-${pkgver}/lib/llvm/bin:$PATH
prepare() {
#  sed -i '32d' hipCUB/test/CMakeLists.txt
#  sed -i '32i find_package( HIP CONFIG REQUIRED )' hipCUB/test/CMakeLists.txt
  CFLAGS="-fPIC -I$PWD/yaml-dist/include"
  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS -parallel-jobs=$(nproc)")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/amdclang++")
set(CMAKE_SHARED_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64")
set(CMAKE_EXE_LINKER_FLAGS "-L/opt/rocm-${pkgver}/lib64 -L$PWD/yaml-dist/lib64")
EOF

  cd ROCmValidationSuite
    git apply ../ROCmValidationSuite.patch
  cd ..
  mkdir build-yaml-cpp
  cd build-yaml-cpp
   cmake ../yaml-cpp \
   -DCMAKE_INSTALL_PREFIX=$PWD/../yaml-dist
   make -j$(nproc)
   make install
  cd ..

  mkdir build || true
  cd build
  cmake ../ROCmValidationSuite \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
   -Dyaml-cpp_DIR=$PWD/../yaml-dist/lib64/cmake/yaml-cpp/ \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver}/ \
   -DROCM_PATH=/opt/rocm-${pkgver}/ \
   -DCPACK_PACKAGING_INSTALL_PREFIX=/opt/rocm-$pkgver/ \
   -DRVS_BUILD_TESTS=OFF \
  -G "Unix Makefiles"
}
build() {
  mkdir build || true
  cd build
  make -j $(nproc)
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make ctest
echo
}

#packaging() {

#}
package() {
  cd build
  make DESTDIR="$pkgdir/" install
}

pkgbase='rocm-rocMLIR'
pkgname=('rocm-rocMLIR')
pkgver=6.4.1
pkgrel=641000
pkgdesc="rocm-core is a utility which can be used to get ROCm release version."
arch=('loong64' 'x86_64')
license=('MIT')
url="https://github.com/ROCm/ROCT-Thunk-Interface.git"

source=(
    "git+https://github.com/ROCm/rocMLIR.git#tag=rocm-$pkgver"
    "rocMLIR-loongarch.patch"
)
b2sums=('SKIP' 'SKIP')
depends=(
  "rocm-llvm=${pkgver}"
  "rocm-cmake=${pkgver}"
)
PATH=/opt/rocm-${pkgver}/bin:$PATH
TARGET="AMDGPU"
prepare() {
  cd rocMLIR
    git apply ../rocMLIR-loongarch.patch
  cd ..
  mkdir build || true
  CFLAGS="-fPIC"
  if [ $CARCH == 'loong64' ];
  then
#    CFLAGS="-mcmodel=extreme $CFLAGS"
    TARGET="LoongArch;$TARGET"
  fi

  cat  > toolchain.cmake << EOF
set(CMAKE_BUILD_TYPE "Release")
set(CMAKE_C_FLAGS "$CFLAGS")
set(CMAKE_CXX_FLAGS "$CFLAGS")
set(CMAKE_BUILD_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_INSTALL_RPATH "/opt/rocm-${pkgver}/lib;/opt/rocm-${pkgver}/lib64;/opt/rocm-${pkgver}/lib/llvm/lib")
set(CMAKE_FIND_ROOT_PATH "/opt/rocm-${pkgver}/")
set(CMAKE_C_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang")
set(CMAKE_CXX_COMPILER "/opt/rocm-${pkgver}/lib/llvm/bin/clang++")
EOF

  cd build
  cmake ../rocMLIR \
   -DCMAKE_TOOLCHAIN_FILE=$PWD/../toolchain.cmake \
   -DBUILD_FAT_LIBROCKCOMPILER=ON \
   -DCMAKE_INSTALL_PREFIX=/opt/rocm-${pkgver}/ \
   -DLLVM_TARGETS_TO_BUILD="$TARGET" \
   -DROCM_PATH=/opt/rocm-${pkgver} \
  -G "Ninja"

}
build() {
  mkdir build || true
  cd build

    ninja 
#  cmake --build . -j $(nproc)
}

check() {
#  cd "ROCm-CompilerSupport"
#  cd build
#  make ctest
echo
}

#packaging() {

#}
package() {
  cd build
  cmake --install . --prefix "$pkgdir"/opt/rocm-${pkgver}/
}
